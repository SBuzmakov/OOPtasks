namespace OOP6_Shop2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Work work = new Work();
            
            work.Play();
        }
    }

    class Work
    {
        private Player _player = new Player(1000);
        private Shop _shop = new Shop();
        private bool _isWork = true;
        private const ConsoleKey CommandExit = ConsoleKey.D0;

        public void Play()
        {
            while (_isWork)
            {
                Manage();
            }
        }

        private void DoShopping()
        {
            Console.Clear();

            _player.ShowCash();

            _shop.Show();

            Console.WriteLine($"{CommandExit} - выйти из магазина без покупок\n");

            int userInput = UserUtils.GetUserInputInt("введите номер товара для покупки: ");

            MakeDeal(userInput);
        }

        private void MakeDeal(int id)
        {
            if(id == 0)
            {
                return;
            }
               
            Item item = FindItem(id);

            if(item == null)
            {
                return;
            }

            if(_player.IsEnoughCash(item.Price))
            {
                _player.Pay(item.Price);

                _shop.DecreaseShelf(id);

                _player.AddItem(item);
            }
        }

        private Item FindItem(int id)
        {
            List<Shelf> shelves = _shop.GetShelves();
            Item item = null;

            foreach (Shelf shelf in shelves)
            {
                if (id == shelf.Id && shelf.IsEnoughItem())
                {
                    item = shelf.GetItem();
                }
            }

            return item;
        }

        private void Manage()
        {
            const ConsoleKey CommandShowItems = ConsoleKey.D1;
            const ConsoleKey CommandShowInventory = ConsoleKey.D2;
            const ConsoleKey FinishWork = ConsoleKey.Escape;

            Console.Clear() ;

            Console.WriteLine($"введите команду: \n{CommandShowItems} - показать товары магазина\n{CommandShowInventory} -показать ваш инвентарь\n{FinishWork} - выход");

            ConsoleKeyInfo charKey = Console.ReadKey(true);

            switch (charKey.Key)
            {
                case CommandShowInventory:
                    _player.ShowInventory();
                    break;

                case CommandShowItems:
                    DoShopping();
                    break;

                case FinishWork:
                    _isWork = false;
                    break;

                default:
                    break;
            }
        }
    }

    class Player
    {
        private List<Item> _inventory = new List<Item>();

        public Player(int cash)
        {
            Cash = cash;
        }

        public int Cash { get; private set; }

        public bool IsEnoughCash(int price)
        {
            if (Cash >= price)
            {
                return true;
            }
            else
            {
                Console.WriteLine($"Не хватает {price - Cash} деняк!");
                Console.ReadLine();
                return false;
            }
        }

        public void Pay(int price)
        {
            Cash -= price;
        }

        public void AddItem(Item item)
        {
            _inventory.Add(item);
        }

        public void ShowInventory()
        {
            Console.Clear();
            Console.WriteLine($"в наличии в вашем инвентаре:");

            ShowCash();

            foreach (Item item in _inventory)
            {
                item.Show();
            }

            Console.ReadLine();
        }

        public void ShowCash()
        {
            Console.WriteLine($"ваш кошелёк: {Cash} деняк\n");
        }
    }

    class Item
    {
        public Item(string name, int price)
        {
            Name = name;
            Price = price;
        }

        public string Name { get; private set; }
        public int Price { get; private set; }

        public void Show()
        {
            Console.WriteLine($"{Name}  {Price} деняк");
        }
    }

    class Shelf
    {
        private List<Item> _items = new List<Item>();

        public Shelf(int id, int size, Item item)
        {
            Id = id;
            Size = size;
            Item = item;

            _items = Fill();
        }

        public int Id { get; private set; }
        public Item Item { get; private set; }
        public int Size { get; private set; }

        public void Show()
        {
            Console.Write($"{Id}  ");
            Item.Show();
            Console.WriteLine($"  {_items.Count} шт. осталось\n");
        }

        public Item GetItem()
        {
            Item item = new Item(null, 0);
            item = _items[0];
            return item;
        }

        public void RemoveItem()
        {
            _items.RemoveAt(0);
        }

        private List<Item> Fill()
        {
            for (int i = 0; i < Size; i++)
            {
                _items.Add(Item);
            }

            return _items;
        }

        public bool IsEnoughItem()
        {
            if (_items.Count > 0)
            {
                return true;
            }
            else
            {
                Console.WriteLine("Товар закончился");
                Console.ReadLine();
                return false;
            }
        }
    }

    class Shop
    {
        private static int s_breadPrice = 50;
        private static int s_milkPrice = 100;
        private static int s_cheesePrice = 150;
        private static int s_sausagePrice = 200;
        private int _shelfSize = 10;
        private List<Shelf> _shelves = new List<Shelf>();
        private Dictionary<string, int> _assortment = new Dictionary<string, int>()
        {
            {"bread", s_breadPrice },
            {"milk", s_milkPrice },
            {"cheese", s_cheesePrice },
            {"sausages", s_sausagePrice }
        };

        public Shop()
        {
            _shelves = Replenishment();
        }

        public void Show()
        {
            foreach (Shelf shelf in _shelves)
            {
                shelf.Show();
            }
        }

        public void DecreaseShelf(int id)
        {
            foreach (Shelf shelf in _shelves)
            {
                if(id == shelf.Id)
                {
                    shelf.RemoveItem();

                    break;
                }
            }
        }

        public List<Shelf> GetShelves()
        {
            List<Shelf> shelves = new List<Shelf>(_shelves);
            return shelves;
        }

        private List<Shelf> Replenishment()
        {
            List <Shelf> shelves = new List<Shelf>();
            int id = 1;

            foreach (KeyValuePair<string, int> items in _assortment)
            {
                Item item = new Item(items.Key, items.Value);

                Shelf shelf = new Shelf(id, _shelfSize, item);

                shelves.Add(shelf);

                id++;
            }

            return shelves;
        }
    }

    class UserUtils
    {
        public static int GetUserInputInt(string text)
        {
            bool isNumber = false;
            int parsedNumber = 0;

            while (isNumber == false)
            {
                Console.Write(text);
                string userInput = Console.ReadLine();
                isNumber = int.TryParse(userInput, out parsedNumber);

                if (isNumber == false)
                {
                    Console.WriteLine("Ошибка! Введите число");
                    Console.ReadKey(true);
                }
            }

            return parsedNumber;
        }
    }
 }
