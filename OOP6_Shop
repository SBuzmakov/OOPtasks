using System.Data;

namespace OOP6_Shop3
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Shop shop = new Shop();

            shop.Play();
        }
    }

    class Person
    {
        protected List<Product> Products = new List<Product>();

        public Person(string name, int balance)
        {
            Balance = balance;
            Name = name;
        }

        public int Balance { get; protected set; }
        public string Name { get; protected set; }

        public void ShowBalance()
        {
            Console.WriteLine($"{Name}: денежный баланс: {Balance}");
        }       
    }

    class Seller: Person
    {
        public Seller(int balance) : base("продавец", balance) 
        {
            Products = [new Product(1, "хлеб", 50), new Product(2, "молоко", 100), new Product(3, "сыр", 150), new Product(4, "сырок БЮАлександров", 50000)];
        }

        public void ShowInfo()
        {
            Console.Clear();

            ShowBalance();

            foreach (Product product in Products)
            {
                product.ShowInfo();
            }

            Console.ReadLine();
        }

        public bool TryGetProduct(int id, out Product product)
        {
            foreach (Product item in Products)
            {
                if (item.Id == id)
                {
                    product = item;
                    return true;
                }
            }

            Console.WriteLine("Товар не найден.");
            Console.ReadLine();
            product = null;
            return false;
        }

        public void SellProduct(Product product)
        {
            IncreaseBalance(product.Price);

            Products.Remove(product);
        }

        private void IncreaseBalance(int price)
        {
            Balance += price;
        }     
    }

    class Player: Person
    {
        public Player(int balance) : base("Игрок", balance) { }

        public void ShowInfo()
        {
            Console.Clear();

            ShowBalance();

            foreach (Product product in Products)
            {
                Console.WriteLine(product.Name);
            }

            Console.ReadLine();
        }

        public void BuyItem(Product product)
        {
            DecreaseBalance(product.Price);

            Products.Add(product);
        }

        public bool IsEnoughMoney(int price)
        {
            if (Balance >= price)
            {
                return true;
            }
            else
            {
                Console.WriteLine($"Не хватает {price - Balance} для покупки!");
                Console.ReadLine();
                return false;
            }
        }

        private void DecreaseBalance(int price)
        {
            Balance -= price;
        }
    }

    class Product
    {
        public Product(int id, string name, int price)
        {
            Id = id;
            Name = name;
            Price = price;
        }

        public int Id { get; private set; }
        public string Name { get; private set; }
        public int Price { get; private set;}

        public void ShowInfo()
        {
            Console.WriteLine($"{Id} {Name} {Price}");
        }
    }

    class Shop
    {
        private Player _player = new Player(1000);
        private Seller _seller = new Seller(0);
        private const ConsoleKey CommandExit = ConsoleKey.D0;

        public void Play()
        {
            bool isWork = true;

            while (isWork)
            {
                Manage(ref isWork);
            }
        }

        private void Manage(ref bool isWork)
        {
            const ConsoleKey CommandShowItems = ConsoleKey.D1;
            const ConsoleKey CommandShowInventory = ConsoleKey.D2;
            const ConsoleKey FinishWork = ConsoleKey.Escape;

            Console.Clear();

            Console.WriteLine($"введите команду: \n{CommandShowItems} - показать товары магазина\n{CommandShowInventory} -показать ваш инвентарь\n{FinishWork} - выход");

            ConsoleKeyInfo charKey = Console.ReadKey(true);

            switch (charKey.Key)
            {
                case CommandShowInventory:
                    _player.ShowInfo();
                    break;

                case CommandShowItems:
                    MakeDeal();
                    break;

                case FinishWork:
                    isWork = false;
                    break;
            }
        }

        private void MakeDeal()
        {
            Console.Clear();

            _player.ShowBalance();

            _seller.ShowInfo();

            Product product = null;

            int userInput = UserUtils.TryParse("введите номер товара для покупки: ");

            if (_seller.TryGetProduct(userInput, out product) && _player.IsEnoughMoney(product.Price))
            {
                _seller.SellProduct(product);

                _player.BuyItem(product);
            }
        }
    }

    class UserUtils
    {
        public static int TryParse(string text)
        {
            int parsedNumber = 0;

            Console.Write(text);
            string userInput = Console.ReadLine();
            bool isNumber = int.TryParse(userInput, out parsedNumber);

            return parsedNumber;
        }
    }
}
